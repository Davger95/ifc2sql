# (you can remove this first line if you prefer)
# version: '3.7'

networks:
  kontroll_network:
    driver: bridge

services:
  # ─────────────────────────────────────────
  # Neo4j service (disabled; uncomment to enable)
  #
  # neo4j:
  #   container_name: kontroll_neo4j
  #   image: library/neo4j:5.7.0-community
  #   restart: unless-stopped
  #   ports:
  #     - "27474:7474"
  #     - "27473:7473"
  #     - "27687:7687"
  #   networks:
  #     - kontroll_network
  #   volumes:
  #     - ./neo4j/data:/data
  #     - ./neo4j/logs:/logs
  #     - ./neo4j/conf:/conf
  #     - ./neo4j/import:/import
  #     - ./neo4j/plugins:/plugins
  #   environment:
  #     - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_INITIAL_PASSWORD}
  #     - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
  #     - NEO4J_dbms_security_procedures_unrestricted=apoc.*
  #     - NEO4J_dbms_security_auth__minimum__password__length=4
  #     - NEO4J_server_http_enabled=true
  #     - NEO4J_server_http_listen__address=0.0.0.0:7474
  #     - NEO4J_server_https_enabled=true
  #     - NEO4J_server_https_listen__address=0.0.0.0:7473
  #     - NEO4J_server_bolt_enabled=true
  #     - NEO4J_server_bolt_listen__address=0.0.0.0:7687
  #   secrets:
  #     - neo4j_password

  # ─────────────────────────────────────────
  # FastAPI service (disabled; uncomment to enable)
  #
  # fastapi:
  #   container_name: kontroll_fastapi
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #     target: server
  #   depends_on:
  #     - neo4j
  #   restart: unless-stopped
  #   ports:
  #     - "24443:8000"
  #   networks:
  #     - kontroll_network
  #   volumes:
  #     - ./etc/letsencrypt:/etc/letsencrypt
  #     - ./api/app/logs:/code/app/logs
  #     - ./api/app/data:/code/app/data
  #   environment:
  #     - NEO4J_USER=${NEO4J_USER}
  #     - NEO4J_INITIAL_PASSWORD=${NEO4J_INITIAL_PASSWORD}
  #     - NEO4J_URI=${NEO4J_URI}
  #     - KONTROLL_BASE_URL=${KONTROLL_BASE_URL}
  #     - KONTROLL_CLIENT_ID=${KONTROLL_CLIENT_ID}
  #     - KONTROLL_CLIENT_NAME=${KONTROLL_CLIENT_NAME}
  #     - SECURITY_AUTHORIZATION_CODE_EXPIRE_SECONDS=${SECURITY_AUTHORIZATION_CODE_EXPIRE_SECONDS}
  #     - SECURITY_ACCESS_TOKEN_EXPIRE_SECONDS=${SECURITY_ACCESS_TOKEN_EXPIRE_SECONDS}
  #     - SECURITY_REFRESH_TOKEN_EXPIRE_SECONDS=${SECURITY_REFRESH_TOKEN_EXPIRE_SECONDS}
  #     - SECURITY_ALGORITHM=${SECURITY_ALGORITHM}
  #     - SESSION_URL_VALIDITY_SECONDS=${SESSION_URL_VALIDITY_SECONDS}
  #     - SESSION_MAX_FILE_SIZE_BYTES=${SESSION_MAX_FILE_SIZE_BYTES}
  #   secrets:
  #     - neo4j_password
  #     - kontroll_client_secret
  #     - security_secret_key

  # ─────────────────────────────────────────
  # MySQL service for IFC CSV staging & import
  db:
    container_name: ifc_mysql
    image: mysql:8.0
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --local-infile=1
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_USER=ifcuser
      - MYSQL_PASSWORD=ifcpass
      - MYSQL_DATABASE=ifcdb
    ports:
      - "3308:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - kontroll_network

secrets:
  neo4j_password:
    file: ./secrets/neo4j_password.txt
  kontroll_client_secret:
    file: ./secrets/kontroll_client_secret.txt
  security_secret_key:
    file: ./secrets/security_secret_key.txt
